{"version":3,"sources":["Filter.js","PersonForm.js","Persons.js","services/serPersons.js","components/Notifications.js","App.js","index.js"],"names":["Filter","valueOf","onChangeOf","value","onChange","event","target","PersonForm","onSubmitOf","valueOfNewName","onChangeOfNewName","valueOfNewNumber","onChangeOfNewNumber","onSubmit","type","Persons","personOf","searchOf","handleDelete","filter","person","name","toLowerCase","includes","map","index","number","onClick","id","baseURL","axios","get","then","response","data","newNote","post","delete","console","log","newPerson","put","Notification","message","status","className","App","useState","setPerson","newName","setNewName","newNumber","setNumber","search","setSearch","setstatus","notice","setNotice","useEffect","services","allPersons","preventDefault","x","window","confirm","updateID","perp","returnedPerson","setTimeout","catch","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.149f4a2d.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst Filter = ({ valueOf, onChangeOf }) => {\r\n  return (\r\n    <div>\r\n      <label>Filter by : </label>\r\n      <input\r\n        value={valueOf}\r\n        onChange={(event) => onChangeOf(event.target.value)}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Filter;\r\n","import React from \"react\";\r\n\r\nconst PersonForm = ({\r\n  onSubmitOf,\r\n  valueOfNewName,\r\n  onChangeOfNewName,\r\n  valueOfNewNumber,\r\n  onChangeOfNewNumber,\r\n}) => {\r\n  return (\r\n    <form onSubmit={onSubmitOf}>\r\n      <div>\r\n        <label>Name - </label>\r\n        <input\r\n          value={valueOfNewName}\r\n          onChange={(event) => onChangeOfNewName(event.target.value)}\r\n        />\r\n        <br />\r\n        <label>Number - </label>\r\n        <input\r\n          value={valueOfNewNumber}\r\n          onChange={(event) => onChangeOfNewNumber(event.target.value)}\r\n        />\r\n      </div>\r\n      <div>\r\n        <button type=\"submit\">Add</button>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default PersonForm;\r\n","import React from \"react\";\r\n\r\nconst Persons = ({ personOf, searchOf, handleDelete }) => {\r\n  return (\r\n    <>\r\n      {personOf\r\n        .filter((person) =>\r\n          person.name.toLowerCase().includes(searchOf.toLowerCase())\r\n        )\r\n        .map((person, index) => (\r\n          <li key={index}>\r\n            {person.name} : {person.number}\r\n            <button onClick={() => handleDelete(person.id, person.name)}>\r\n              Delete\r\n            </button>\r\n          </li>\r\n          // should work with te index since we are not deleting\r\n        ))}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Persons;\r\n","import axios from \"axios\";\r\n\r\n// const baseURL = \"http://localhost:3001/api/persons\";\r\nconst baseURL = \"/api/persons\";\r\n\r\nconst getAll = () => {\r\n  const request = axios.get(baseURL);\r\n  return request.then((response) => response.data);\r\n};\r\n\r\nconst create = (newNote) => {\r\n  const request = axios.post(baseURL, newNote);\r\n  return request.then((response) => response.data);\r\n};\r\n\r\nconst deletePerson = (id) => {\r\n  const request = axios.delete(`${baseURL}/${id}`);\r\n  return request.then((response) => console.log(response));\r\n};\r\n\r\nconst updatePersons = (id, newPerson) => {\r\n  const request = axios.put(`${baseURL}/${id}`, newPerson);\r\n  return request.then((response) => response.data);\r\n};\r\n\r\nexport default {\r\n  getAll,\r\n  create,\r\n  deletePerson,\r\n  updatePersons,\r\n};\r\n","import React from \"react\";\r\n\r\nconst Notification = ({ message, status }) => {\r\n  if (message === null) {\r\n    return null;\r\n  }\r\n\r\n  return <div className={status}>{message}</div>;\r\n};\r\n\r\nexport default Notification;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport \"./index.css\";\r\nimport Filter from \"./Filter\";\r\nimport PersonForm from \"./PersonForm\";\r\nimport Persons from \"./Persons\";\r\nimport services from \"./services/serPersons\";\r\nimport Notification from \"./components/Notifications\";\r\n\r\nconst App = () => {\r\n  const [person, setPerson] = useState([]);\r\n  const [newName, setNewName] = useState(\"\");\r\n  const [newNumber, setNumber] = useState(\"\");\r\n  const [search, setSearch] = useState(\"\");\r\n  //\r\n  const [status, setstatus] = useState(null);\r\n  const [notice, setNotice] = useState(null);\r\n  //\r\n  useEffect(() => {\r\n    services.getAll().then((allPersons) => setPerson(allPersons));\r\n  }, []);\r\n\r\n  const handleOnSubmit = (event) => {\r\n    event.preventDefault();\r\n\r\n    const newPerson = {\r\n      name: newName,\r\n      number: newNumber,\r\n    };\r\n\r\n    // array of names only\r\n    const nameArray = person.map((x) => x.name);\r\n\r\n    if (!nameArray.includes(newPerson.name)) {\r\n      services.create(newPerson).then((returnedPerson) => {\r\n        setPerson([...person, returnedPerson]);\r\n        setstatus(\"success\");\r\n        setNotice(`${returnedPerson.name} was added successfully`);\r\n\r\n        setTimeout(() => {\r\n          setstatus(null);\r\n          setNotice(null);\r\n        }, 3000);\r\n      });\r\n    } else if (\r\n      window.confirm(\r\n        `${newPerson.name} is already added to the Phonebook, replace the old number with the new One`\r\n      )\r\n    ) {\r\n      // put request\r\n      const updateID = person.filter((perp) => perp.name === newPerson.name)[0]\r\n        .id;\r\n      console.log(updateID);\r\n      services\r\n        .updatePersons(updateID, newPerson)\r\n        .then((returnedPerson) => {\r\n          setPerson(\r\n            person.map((perp) =>\r\n              perp.id === returnedPerson.id ? returnedPerson : perp\r\n            )\r\n          );\r\n\r\n          setstatus(\"success\");\r\n          setNotice(`${returnedPerson.name} was updated successfully`);\r\n\r\n          setTimeout(() => {\r\n            setstatus(null);\r\n            setNotice(null);\r\n          }, 3000);\r\n        })\r\n        .catch((response) => {\r\n          console.log(response);\r\n          console.log(updateID);\r\n          setstatus(\"failure\");\r\n          setNotice(\r\n            `Information on ${newPerson.name} has already been removed from the server`\r\n          );\r\n\r\n          setTimeout(() => {\r\n            setstatus(null);\r\n            setNotice(null);\r\n          }, 3000);\r\n\r\n          setPerson(person.filter((perp) => perp.id !== updateID));\r\n        });\r\n    }\r\n    setNewName(\"\");\r\n    setNumber(\"\");\r\n  };\r\n\r\n  const handleDelete = (id, name) => {\r\n    if (window.confirm(`confirm delete: ${name}`)) {\r\n      services.deletePerson(id).then((response) => {\r\n        console.log(response);\r\n        setPerson(person.filter((perp) => perp.id !== id));\r\n      });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h1>PhoneBook</h1>\r\n      <Notification message={notice} status={status} />\r\n      <Filter valueOf={search} onChangeOf={setSearch} />\r\n      <h2> Add a New Person</h2>\r\n      <PersonForm\r\n        onSubmitOf={handleOnSubmit}\r\n        valueOfNewName={newName}\r\n        onChangeOfNewName={setNewName}\r\n        valueOfNewNumber={newNumber}\r\n        onChangeOfNewNumber={setNumber}\r\n      />\r\n\r\n      <h2> Numbers:</h2>\r\n      <Persons\r\n        personOf={person}\r\n        searchOf={search}\r\n        handleDelete={handleDelete}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}